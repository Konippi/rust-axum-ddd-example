env_files = [  
    ".env.local",
    { path = ".env.dev", profile = "dev" },
    { path = ".env.prod", profile = "prod"}
]

[env]
ENV = "local"

[env.dev]
ENV = "dev"

[env.prod]
ENV = "prod"

[tasks.docker-build]
category = "docker"
description = "Build docker images"
script = [
    '''
    echo "Building docker images..."
    docker compose --env-file .env.${ENV} build
    '''
]

[tasks.docker-build-run]
category = "docker"
description = "Build and start docker containers"
script = [
    '''
    echo "Building and Starting containers..."
    docker compose --env-file .env.${ENV} up -d --build
    '''
]

[tasks.docker-run]
category = "docker"
description = "Start docker containers"
script = [
    '''
    echo "Starting containers..."
    docker compose --env-file .env.${ENV} up -d
    '''
]

[tasks.docker-stop]
category = "docker"
description = "Stop docker containers"
script = [
    '''
    echo "Stopping containers..."
    docker compose --env-file .env.${ENV} down
    '''
]

[tasks.enter-psql]
category = "docker"
description = "Enter psql container"
script = [
    '''
    echo "Entering psql container..."
    docker exec -it rust-axum-ddd-example-postgres bash
    '''
]

[tasks.sqlx-migrate]
category = "sqlx"
description = "Run migrations"
script = [
    '''
    echo "Running migrations..."
    sqlx migrate run --database-url ${DATABASE_URL}
    '''
]

[tasks.sqlx-rollback]
category = "sqlx"
description = "Rollback migrations"
script = [
    '''
    echo "Rolling back migrations..."
    sqlx migrate revert --database-url ${DATABASE_URL}
    '''
]

[tasks.sea-orm-gen]
category = "sea-orm"
description = "Generate entities by SeaORM"
script = [
    '''
    echo "Generating entities..."
    sea-orm-cli generate entity -u ${DATABASE_URL} -o src/domain/entity
    '''
]